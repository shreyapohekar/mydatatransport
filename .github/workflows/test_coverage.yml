name: test_coverage

on:
  pull_request:
    # open will be triggered when a pull request is created.
    # synchronize will be triggered when a pull request has new commits.
    # closed will be triggered when a pull request is closed.
    types: [opened, synchronize, closed]

env:
  METRICS_SERVICE_SECRET: ${{ secrets.GHASecretsGPGPassphrase1 }}
  # Used to compile test-specific code in the SDK.
  GDT_TEST: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  manage_test_results:
    if: github.event.action == 'synchronize' || github.event.action == 'opened' || github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
   
    - name: Generate report
      if: github.event.pull_request.merged != true
      env:
        pr_branch: ${{ github.event.pull_request.head.ref }}
      run: |
        echo $(git merge-base remotes/origin/${pr_branch} remotes/origin/main)
        common_commit=$(git merge-base remotes/origin/${pr_branch} remotes/origin/main)
        GITHUB_SHA=$(cat $GITHUB_EVENT_PATH | jq -r .pull_request.head.sha)
        if [ -d "${{steps.download.outputs.download-path}}" ]; then
        firebase-ios-sdk/scripts/health_metrics/generate_code_coverage_report/.build/debug/CoverageReportGenerator --presubmit "google/GoogleDataTransport" --head-commit "${GITHUB_SHA}" --token $(gcloud auth print-identity-token) --xcresult-dir "${{steps.download.outputs.download-path}}/codecoverage" --log-link "https://github.com/google/GoogleDataTransport/actions/runs/${GITHUB_RUN_ID}" --pull-request-num ${{github.event.pull_request.number}} --base-commit "$common_commit"
        fi
    - name: Update New Coverage Data
      if: github.event.pull_request.merged == true && env.METRICS_SERVICE_SECRET
      run: |
        if [ -d "${{steps.download.outputs.download-path}}" ]; then
        firebase-ios-sdk/scripts/health_metrics/generate_code_coverage_report/.build/debug/CoverageReportGenerator --merge "google/GoogleDataTransport" --head-commit "${GITHUB_SHA}" --token $(gcloud auth print-identity-token) --xcresult-dir "${{steps.download.outputs.download-path}}/codecoverage" --log-link "https://github.com/google/GoogleDataTransport/actions/runs/${GITHUB_RUN_ID}" --source-branch "${{ github.base_ref }}"
        fi
